{"version":3,"sources":["webpack:///./src/components/Card.tsx","webpack:///./src/pages/index.tsx"],"names":["CardAnchor","tw","Link","CardWrapper","Image","GatsbyImage","CardCaption","H3","P","props","data","image","getImage","Images","localFiles","to","Slug","onClick","e","currentTarget","blur","alt","Name","Designer","CardsWrapper","cards","allAirtable","edges","map","element","i","node","key","Layout","title"],"mappings":"+KAIMA,GAAaC,QAAGC,MAAN,mEAAGD,CAAQ,8XACrBE,EAAcF,uBAAH,yDAAGA,CAAS,unBAEvBG,GAAQH,QAAGI,KAAN,8DAAGJ,CAAe,8OACvBK,EAAcL,2BAAH,yDAAGA,CAAa,0FAC3BM,EAAKN,mBAAH,gDAAGA,CAAK,4CACVO,EAAIP,kBAAH,+CAAGA,CAAI,uCAkBd,EAhBa,SAACQ,GAAyB,IAC7BC,EAASD,EAATC,KACFC,GAAQC,OAASF,EAAKG,OAAOC,WAAW,IAC9C,OACE,gBAACd,EAAD,CAAYe,GAAE,IAAML,EAAKM,KAAX,IAAoBC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,cAAcC,SAC9D,gBAACjB,EAAD,KACE,gBAACC,EAAD,CAAOiB,IAAKX,EAAKY,KAAMX,MAAOA,IAC9B,gBAACL,EAAD,KACE,gBAACC,EAAD,KAAKG,EAAKY,MACV,gBAACd,EAAD,WAAOE,EAAKa,UAAYb,EAAKa,SAAS,GAAGb,KAAKY,U,UCflDE,EAAevB,qBAAH,2DAAGA,CAAO,ubA+C5B,EA7CkB,SAAC,GAAa,MAAXS,EAAW,EAAXA,KACbe,EAAQf,SAAH,UAAGA,EAAMgB,mBAAT,aAAG,EAAmBC,MAAMC,KACrC,SAACC,EAAwBC,GAAiB,IAE9BpB,EACNmB,EADFE,KAAQrB,KAEV,OAAO,gBAAC,EAAD,CAAMsB,IAAK,OAASF,EAAGpB,KAAMA,OAIxC,OACE,gBAACuB,EAAA,EAAD,CAAQC,MAAM,yBACZ,gBAACV,EAAD,KAAeC","file":"component---src-pages-index-tsx-5ccdfce92ffea2db8a53.js","sourcesContent":["import { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport React from 'react'\nimport tw from 'twin.macro'\nconst CardAnchor = tw(Link)`rounded active:(ring-0 ring-offset-0)`\nconst CardWrapper = tw.figure`\nmax-w-md rounded overflow-hidden shadow hover:shadow-xl m-3 active:(shadow-sm)`\nconst Image = tw(GatsbyImage)`w-full aspect-w-3 aspect-h-2`\nconst CardCaption = tw.figcaption`flex-col p-2 text-center text-primaryDark`\nconst H3 = tw.h3`text-lg`\nconst P = tw.p`text-base`\n\nconst Card = (props: { data: any }) => {\n  const { data } = props\n  const image = getImage(data.Images.localFiles[0])\n  return (\n    <CardAnchor to={`/${data.Slug}/`} onClick={e => e.currentTarget.blur()}>\n      <CardWrapper>\n        <Image alt={data.Name} image={image} />\n        <CardCaption>\n          <H3>{data.Name}</H3>\n          <P>by {data.Designer && data.Designer[0].data.Name}</P>\n        </CardCaption>\n      </CardWrapper>\n    </CardAnchor>\n  )\n}\n\nexport default Card\n","import { graphql } from 'gatsby'\nimport React from 'react'\nimport tw from 'twin.macro'\nimport Card from '../components/Card'\nimport Layout from '../components/Layout'\n\nconst CardsWrapper = tw.main`my-4 max-w-7xl mx-auto px-2 sm:px-4 lg:px-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3`\n\nconst IndexPage = ({ data }) => {\n  const cards = data?.allAirtable?.edges.map(\n    (element: { node: any }, i: React.Key) => {\n      const {\n        node: { data },\n      } = element\n      return <Card key={'card' + i} data={data} />\n    },\n  )\n\n  return (\n    <Layout title=\"Reamade Warsaw | SHOP\">\n      <CardsWrapper>{cards}</CardsWrapper>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query Exmple {\n    allAirtable(\n      filter: { table: { eq: \"Furniture\" } }\n      sort: { fields: rowIndex }\n    ) {\n      edges {\n        node {\n          data {\n            Images {\n              localFiles {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n            Slug\n            Name\n            Designer {\n              data {\n                Name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport default IndexPage\n"],"sourceRoot":""}